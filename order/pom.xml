<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>io.flowing.retail.java</groupId>
	<artifactId>flowing-retail-java-kafka-or-rabbit-spring-boot-camunda-order</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<spring.boot.version>1.5.7.RELEASE</spring.boot.version>
		<spring-cloud-stream.version>Chelsea.SR2</spring-cloud-stream.version>
		<!-- 
		<spring.boot.version>2.0.0.M4</spring.boot.version>
		<spring-cloud-stream.version>Elmhurst.M1</spring-cloud-stream.version>
				<spring.cloud.stream.binder.kafka.version>1.3.0.RC1</spring.cloud.stream.binder.kafka.version>
				https://stackoverflow.com/questions/44677210/unable-to-set-kafka-properties-in-spring-cloud-stream-kafka
		 -->
		<!-- 
		<camunda.version>7.7.3-ee</camunda.version>
		 -->
		<camunda.version>7.7.0</camunda.version>
		<camunda.spring.boot.version>2.2.0</camunda.spring.boot.version>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<!-- Import dependency management from camunda -->
				<groupId>org.camunda.bpm</groupId>
				<artifactId>camunda-bom</artifactId>
				<version>${camunda.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-stream-dependencies</artifactId>
				<version>${spring-cloud-stream.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring.boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			
			<dependency>
				<groupId>org.camunda.bpm.extension.springboot</groupId>
				<artifactId>camunda-bpm-spring-boot-starter-bom</artifactId>
				<version>${camunda.spring.boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<!--  include if you use Camunda CE
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<version>0.9.1</version>
		</dependency>
		 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-stream-kafka</artifactId>
		</dependency>
		<dependency>
			<groupId>org.camunda.bpm.extension.springboot</groupId>
			<artifactId>camunda-bpm-spring-boot-starter-webapp</artifactId>
			<!-- exclude this if you want to use Enterprise Cockpit 
			<exclusions>
				<exclusion>
					<groupId>org.camunda.bpm.webapp</groupId>
					<artifactId>camunda-webapp-webjar</artifactId>
				</exclusion>
			</exclusions>
			-->
		</dependency>
		<!-- and include Enterprise Cockpit, see our Consulting Examples
		<dependency>
			<groupId>com.camunda.consulting.webapp</groupId>
			<artifactId>camunda-webapp-customized-webjar</artifactId>
			<version>7.7.2</version>
			<scope>provided</scope>
		</dependency>
		-->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.camunda.bpm</groupId>
			<artifactId>camunda-engine-plugin-spin</artifactId>
		</dependency>
		<dependency>
			<groupId>org.camunda.spin</groupId>
			<artifactId>camunda-spin-dataformat-all</artifactId>
		</dependency>
		
		<!-- testing -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream-test-support</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- make sure to use this version as of https://github.com/camunda/camunda-bpm-assert/issues/90 -->
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>1.7.1</version>
			<scope>test</scope>			
		</dependency>
		<dependency>
			<groupId>org.camunda.bpm.extension</groupId>
			<artifactId>camunda-bpm-assert-scenario</artifactId>
			<version>0.2</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.camunda.bpm.extension</groupId>
			<artifactId>camunda-bpm-assert</artifactId>
			<version>2.0-alpha1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.camunda.bpm.extension</groupId>
			<artifactId>camunda-bpm-process-test-coverage</artifactId>
			<version>0.3.0</version>
			<scope>test</scope>
		</dependency>		
	</dependencies>

	<repositories>
		<repository>
			<id>camunda-bpm-nexus</id>
			<name>Camunda BPM Maven Repository</name>
			<url>https://app.camunda.com/nexus/content/groups/public</url>
		</repository>
		<repository>
        <id>spring-milestones</id>
        <name>Spring Milestones</name>
        <url>https://repo.spring.io/milestone</url>
        <snapshots>
            <enabled>false</enabled>
        </snapshots>
    </repository>
	</repositories>
   <build>
    	<plugins>
			 <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>              
                <configuration>                         
    				 <archive>
                       <manifest>
                         <mainClass>io.flowing.retail.order</mainClass>
                            </manifest>
                      </archive>
                </configuration>
             </plugin>      
    	</plugins>
    </build>
</project>
